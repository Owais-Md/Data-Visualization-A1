<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CascadingFiltersHamburgerUI />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='2024-07-23-washington-post-police-shootings-export' inline='true' name='federated.0p5mx611trexy71gmqaos1q8ozfg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2024-07-23-washington-post-police-shootings-export' name='textscan.137c2v706wvbw41ek5tgq0az7f6f'>
            <connection class='textscan' directory='C:/Users/modan/OneDrive - iiit-b/Sem5/DV-5-DAS-732/A1' filename='2024-07-23-washington-post-police-shootings-export.csv' password='' server='' />
          </named-connection>
          <named-connection caption='us_pop_by_state' name='textscan.0lev1m100e3fzo0zsgpbw0dzo3nk'>
            <connection class='textscan' directory='C:/Users/modan/OneDrive - iiit-b/Sem5/DV-5-DAS-732/A1' filename='us_pop_by_state.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[2024-07-23-washington-post-police-shootings-export.csv].[state]' />
              <expression op='[us_pop_by_state.csv].[state]' />
            </expression>
          </clause>
          <relation connection='textscan.137c2v706wvbw41ek5tgq0az7f6f' name='2024-07-23-washington-post-police-shootings-export.csv' table='[C:\Users\modan\OneDrive - iiit-b\Sem5\DV-5-DAS-732\A1\2024-07-23-washington-post-police-shootings-export#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='name' ordinal='1' />
              <column datatype='integer' name='age' ordinal='2' />
              <column datatype='string' name='gender' ordinal='3' />
              <column datatype='string' name='armed' ordinal='4' />
              <column datatype='string' name='race' ordinal='5' />
              <column datatype='string' name='city' ordinal='6' />
              <column datatype='string' name='state' ordinal='7' />
              <column datatype='string' name='flee' ordinal='8' />
              <column datatype='boolean' name='body_camera' ordinal='9' />
              <column datatype='boolean' name='signs_of_mental_illness' ordinal='10' />
              <column datatype='string' name='police_departments_involved' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.0lev1m100e3fzo0zsgpbw0dzo3nk' name='us_pop_by_state.csv' table='[us_pop_by_state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='real' name='rank' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='2020_census' ordinal='2' />
              <column datatype='real' name='percent_of_total' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[2024-07-23-washington-post-police-shootings-export.csv].[state]' />
              <expression op='[us_pop_by_state.csv].[state]' />
            </expression>
          </clause>
          <relation connection='textscan.137c2v706wvbw41ek5tgq0az7f6f' name='2024-07-23-washington-post-police-shootings-export.csv' table='[C:\Users\modan\OneDrive - iiit-b\Sem5\DV-5-DAS-732\A1\2024-07-23-washington-post-police-shootings-export#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='date' name='date' ordinal='0' />
              <column datatype='string' name='name' ordinal='1' />
              <column datatype='integer' name='age' ordinal='2' />
              <column datatype='string' name='gender' ordinal='3' />
              <column datatype='string' name='armed' ordinal='4' />
              <column datatype='string' name='race' ordinal='5' />
              <column datatype='string' name='city' ordinal='6' />
              <column datatype='string' name='state' ordinal='7' />
              <column datatype='string' name='flee' ordinal='8' />
              <column datatype='boolean' name='body_camera' ordinal='9' />
              <column datatype='boolean' name='signs_of_mental_illness' ordinal='10' />
              <column datatype='string' name='police_departments_involved' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.0lev1m100e3fzo0zsgpbw0dzo3nk' name='us_pop_by_state.csv' table='[us_pop_by_state#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
              <column datatype='real' name='rank' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='2020_census' ordinal='2' />
              <column datatype='real' name='percent_of_total' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[2020_census]' value='[us_pop_by_state.csv].[2020_census]' />
          <map key='[age]' value='[2024-07-23-washington-post-police-shootings-export.csv].[age]' />
          <map key='[armed]' value='[2024-07-23-washington-post-police-shootings-export.csv].[armed]' />
          <map key='[body_camera]' value='[2024-07-23-washington-post-police-shootings-export.csv].[body_camera]' />
          <map key='[city]' value='[2024-07-23-washington-post-police-shootings-export.csv].[city]' />
          <map key='[date]' value='[2024-07-23-washington-post-police-shootings-export.csv].[date]' />
          <map key='[flee]' value='[2024-07-23-washington-post-police-shootings-export.csv].[flee]' />
          <map key='[gender]' value='[2024-07-23-washington-post-police-shootings-export.csv].[gender]' />
          <map key='[name]' value='[2024-07-23-washington-post-police-shootings-export.csv].[name]' />
          <map key='[percent_of_total]' value='[us_pop_by_state.csv].[percent_of_total]' />
          <map key='[police_departments_involved]' value='[2024-07-23-washington-post-police-shootings-export.csv].[police_departments_involved]' />
          <map key='[race]' value='[2024-07-23-washington-post-police-shootings-export.csv].[race]' />
          <map key='[rank]' value='[us_pop_by_state.csv].[rank]' />
          <map key='[signs_of_mental_illness]' value='[2024-07-23-washington-post-police-shootings-export.csv].[signs_of_mental_illness]' />
          <map key='[state (us_pop_by_state.csv)]' value='[us_pop_by_state.csv].[state]' />
          <map key='[state]' value='[2024-07-23-washington-post-police-shootings-export.csv].[state]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>armed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[armed]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>armed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>race</remote-name>
            <remote-type>129</remote-type>
            <local-name>[race]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>race</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flee</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flee]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>flee</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>body_camera</remote-name>
            <remote-type>11</remote-type>
            <local-name>[body_camera]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>body_camera</remote-alias>
            <ordinal>9</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>signs_of_mental_illness</remote-name>
            <remote-type>11</remote-type>
            <local-name>[signs_of_mental_illness]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>signs_of_mental_illness</remote-alias>
            <ordinal>10</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>police_departments_involved</remote-name>
            <remote-type>129</remote-type>
            <local-name>[police_departments_involved]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>police_departments_involved</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rank]</local-name>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias>rank</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state (us_pop_by_state.csv)]</local-name>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2020_census</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2020_census]</local-name>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias>2020_census</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_of_total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_of_total]</local-name>
            <parent-name>[us_pop_by_state.csv]</parent-name>
            <remote-alias>percent_of_total</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='2020 Census' datatype='integer' name='[2020_census]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='2024-07-23-washington-post-police-shootings-export.csv' datatype='table' name='[__tableau_internal_object_id__].[2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85]' role='measure' type='quantitative' />
      <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column caption='Armed' datatype='string' name='[armed]' role='dimension' type='nominal' />
      <column caption='Body Camera' datatype='boolean' name='[body_camera]' role='dimension' type='nominal'>
        <aliases>
          <alias key='false' value='Body cam footage absent' />
          <alias key='true' value='Body cam footage present' />
        </aliases>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Flee' datatype='string' name='[flee]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Percent Of Total' datatype='real' name='[percent_of_total]' role='measure' type='quantitative' />
      <column caption='Police Departments Involved' datatype='string' name='[police_departments_involved]' role='dimension' type='nominal' />
      <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
      <column caption='Rank' datatype='real' name='[rank]' role='measure' type='quantitative' />
      <column caption='Signs Of Mental Illness' datatype='boolean' name='[signs_of_mental_illness]' role='dimension' type='nominal' />
      <column caption='State (Us Pop By State.Csv)' datatype='string' name='[state (us_pop_by_state.csv)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[armed]' derivation='None' name='[none:armed:nk]' pivot='key' type='nominal' />
      <column-instance column='[flee]' derivation='None' name='[none:flee:nk]' pivot='key' type='nominal' />
      <column-instance column='[race]' derivation='None' name='[none:race:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:flee:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;not&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;foot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;car&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:race:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Native American&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;White,Hispanic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;White,Black&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Native American,Hispanic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hispanic&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;White,Black,Native American&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Black,Hispanic&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:armed:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;other&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gun,vehicle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;undetermined&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;vehicle,knife&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;other,gun&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;other,knife&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;knife&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;gun,other&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;blunt_object&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;blunt_object,blunt_object&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;knife,blunt_object&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;unknown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;vehicle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;blunt_object,knife&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;knife,knife&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;replica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;knife,vehicle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;gun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;vehicle,gun&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unarmed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;gun,knife&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2024-07-23-washington-post-police-shootings-export.csv' id='2024-07-23-washington-post-police-shootings-export.csv_AA9FFE0851914601A8DA0966B0D58C85'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[2024-07-23-washington-post-police-shootings-export.csv].[state]' />
                    <expression op='[us_pop_by_state.csv].[state]' />
                  </expression>
                </clause>
                <relation connection='textscan.137c2v706wvbw41ek5tgq0az7f6f' name='2024-07-23-washington-post-police-shootings-export.csv' table='[C:\Users\modan\OneDrive - iiit-b\Sem5\DV-5-DAS-732\A1\2024-07-23-washington-post-police-shootings-export#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                    <column datatype='date' name='date' ordinal='0' />
                    <column datatype='string' name='name' ordinal='1' />
                    <column datatype='integer' name='age' ordinal='2' />
                    <column datatype='string' name='gender' ordinal='3' />
                    <column datatype='string' name='armed' ordinal='4' />
                    <column datatype='string' name='race' ordinal='5' />
                    <column datatype='string' name='city' ordinal='6' />
                    <column datatype='string' name='state' ordinal='7' />
                    <column datatype='string' name='flee' ordinal='8' />
                    <column datatype='boolean' name='body_camera' ordinal='9' />
                    <column datatype='boolean' name='signs_of_mental_illness' ordinal='10' />
                    <column datatype='string' name='police_departments_involved' ordinal='11' />
                  </columns>
                </relation>
                <relation connection='textscan.0lev1m100e3fzo0zsgpbw0dzo3nk' name='us_pop_by_state.csv' table='[us_pop_by_state#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                    <column datatype='real' name='rank' ordinal='0' />
                    <column datatype='string' name='state' ordinal='1' />
                    <column datatype='integer' name='2020_census' ordinal='2' />
                    <column datatype='real' name='percent_of_total' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='T2_1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of shootings by each state
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column-instance column='[name]' derivation='Count' name='[cnt:name:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:date:qk]' included-values='in-range'>
            <min>#2015-01-02#</min>
            <max>#2020-05-20#</max>
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[Longitude (generated)]' field-type='quantitative' max='-6710493.232619497' min='-14930144.254946396' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[Latitude (generated)]' field-type='quantitative' max='6952309.9050661875' min='2303540.0297809462' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' value='Count of cases'>
              <formatted-text>
                <run>Count of cases</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' />
              <text column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]' />
              <geometry column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[Latitude (generated)]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6BF116E9-3107-4F9A-A31B-279B0C445D02}' />
    </worksheet>
    <worksheet name='T2_10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of shootings in the states AZ, CO, NM, and OK, separated by race of the suspect</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[race]' derivation='None' name='[none:race:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Black&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Hispanic&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Native American&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;White&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Black&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OK&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]</column>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]' scope='cols' value='% of total cases' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1057' />
                <format attr='maxwidth' value='1057' />
                <format attr='minheight' value='80' />
                <format attr='maxheight' value='80' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]</cols>
      </table>
      <simple-id uuid='{07E31C7D-C73B-4CED-AF68-2A2F94FE7291}' />
    </worksheet>
    <worksheet name='T2_11'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of shootings in the states AZ, CO, NM and OK, separated by arms borne by the suspect</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='Armed' datatype='string' name='[armed]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[armed]' derivation='None' name='[none:armed:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:armed:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:armed:nk]' member='%null%' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;undetermined&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;unknown&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;vehicle&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;vehicle,gun&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;gun&quot;</bucket>
              <bucket>&quot;knife&quot;</bucket>
              <bucket>&quot;replica&quot;</bucket>
              <bucket>&quot;blunt_object&quot;</bucket>
              <bucket>&quot;gun,knife&quot;</bucket>
              <bucket>&quot;gun,vehicle&quot;</bucket>
              <bucket>&quot;knife,blunt_object&quot;</bucket>
              <bucket>&quot;knife,vehicle&quot;</bucket>
              <bucket>&quot;unarmed&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OK&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]' scope='cols' value='% of total cases' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' value='Armed with'>
              <formatted-text>
                <run>Armed with</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='941' />
                <format attr='maxwidth' value='941' />
                <format attr='minheight' value='80' />
                <format attr='maxheight' value='80' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]</cols>
      </table>
      <simple-id uuid='{C4303568-57D3-42F6-924A-9375A26B061D}' />
    </worksheet>
    <worksheet name='T2_12'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of shootings in the states AZ, CO, NM and OK, separated by modes of fleeing and whether bodycam footage is present</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='Body Camera' datatype='boolean' name='[body_camera]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Body cam footage absent' />
                <alias key='true' value='Body cam footage present' />
              </aliases>
            </column>
            <column caption='Flee' datatype='string' name='[flee]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[body_camera]' derivation='None' name='[none:body_camera:nk]' pivot='key' type='nominal' />
            <column-instance column='[flee]' derivation='None' name='[none:flee:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:flee:nk]' />
              <groupfilter function='member' level='[none:flee:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;other&quot;</bucket>
              <bucket>&quot;car&quot;</bucket>
              <bucket>&quot;foot&quot;</bucket>
              <bucket>&quot;not&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OK&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]' scope='cols' value='% of total cases' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' value='Mode of Fleeing'>
              <formatted-text>
                <run>Mode of Fleeing</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1000' />
                <format attr='maxwidth' value='1000' />
                <format attr='minheight' value='160' />
                <format attr='maxheight' value='160' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p5mx611trexy71gmqaos1q8ozfg].[none:body_camera:nk] / [federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk])</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]</cols>
      </table>
      <simple-id uuid='{9C248A1E-3F8C-430B-83D7-B9A0A7D7D55C}' />
    </worksheet>
    <worksheet name='T2_13'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of shootings in the states CT, MA, NJ and NY, separated by race of the suspect</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[race]' derivation='None' name='[none:race:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Asian&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Black&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Black,Hispanic&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Hispanic&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Native American,Hispanic&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;White&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Black&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Black,Native American&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Hispanic&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]</column>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]' scope='cols' value='% of total cases' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='972' />
                <format attr='maxwidth' value='972' />
                <format attr='minheight' value='80' />
                <format attr='maxheight' value='80' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]</cols>
      </table>
      <simple-id uuid='{157C1F32-C822-4526-B423-7C20E940A2DA}' />
    </worksheet>
    <worksheet name='T2_14'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of shootings in the states CT, MA, NJ and NY, separated by arms borne by the suspect</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='Armed' datatype='string' name='[armed]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[armed]' derivation='None' name='[none:armed:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:armed:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;undetermined&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;unknown&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;gun&quot;</bucket>
              <bucket>&quot;knife&quot;</bucket>
              <bucket>&quot;replica&quot;</bucket>
              <bucket>&quot;blunt_object&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;gun,vehicle&quot;</bucket>
              <bucket>&quot;vehicle&quot;</bucket>
              <bucket>&quot;other&quot;</bucket>
              <bucket>&quot;undetermined&quot;</bucket>
              <bucket>&quot;unknown&quot;</bucket>
              <bucket>&quot;unarmed&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]' scope='cols' value='% of total cases' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' value='Armed with'>
              <formatted-text>
                <run>Armed with</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1041' />
                <format attr='maxwidth' value='1041' />
                <format attr='minheight' value='80' />
                <format attr='maxheight' value='80' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]</cols>
      </table>
      <simple-id uuid='{C0CB07CA-9BF1-4BE7-8D2F-A9F76C7653AE}' />
    </worksheet>
    <worksheet name='T2_15'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of shootings in the states CT, MA, NJ, and NY, separated by modes of fleeing and whether bodycam footage is present </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='Body Camera' datatype='boolean' name='[body_camera]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Body cam footage absent' />
                <alias key='true' value='Body cam footage present' />
              </aliases>
            </column>
            <column caption='Flee' datatype='string' name='[flee]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[body_camera]' derivation='None' name='[none:body_camera:nk]' pivot='key' type='nominal' />
            <column-instance column='[flee]' derivation='None' name='[none:flee:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:flee:nk]' />
              <groupfilter function='member' level='[none:flee:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;other&quot;</bucket>
              <bucket>&quot;car&quot;</bucket>
              <bucket>&quot;foot&quot;</bucket>
              <bucket>&quot;not&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NY&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]' scope='cols' value='% of total cases' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' value='Mode of Fleeing'>
              <formatted-text>
                <run>Mode of Fleeing</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='984' />
                <format attr='maxwidth' value='984' />
                <format attr='minheight' value='160' />
                <format attr='maxheight' value='160' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p5mx611trexy71gmqaos1q8ozfg].[none:body_camera:nk] / [federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk])</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]</cols>
      </table>
      <simple-id uuid='{6DE8F383-73A4-4809-9730-69A6FD9C1894}' />
    </worksheet>
    <worksheet name='T2_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of shootings by city/town/settlement
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[cnt:name:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[Longitude (generated)]' field-type='quantitative' max='-6596883.9076671032' min='-14980565.661601957' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[Latitude (generated)]' field-type='quantitative' max='6936387.3404148873' min='2194846.9665221302' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' value='Count of cases&#10;'>
              <formatted-text>
                <run>Count of cases&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' />
              <lod column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]' />
              <lod column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:city:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[Latitude (generated)]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3FBB625B-10EC-4658-8107-5FA7C84593E5}' />
    </worksheet>
    <worksheet name='T2_3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of shootings by state vs. Fraction of the country&apos;s population within the state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column-instance column='[percent_of_total]' derivation='Avg' name='[avg:percent_of_total:qk]' pivot='key' type='quantitative' />
            <column-instance column='[name]' derivation='Count' name='[cnt:name:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Percent Of Total' datatype='real' name='[percent_of_total]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[avg:percent_of_total:qk]' scope='rows' value='Fraction of population' />
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' scope='rows' value='Number of cases' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0p5mx611trexy71gmqaos1q8ozfg].[avg:percent_of_total:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk] + [federated.0p5mx611trexy71gmqaos1q8ozfg].[avg:percent_of_total:qk])</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</cols>
      </table>
      <simple-id uuid='{2684D219-3085-40C5-BA27-43E8CDF6DD13}' />
    </worksheet>
    <worksheet name='T2_4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of shootings by state (scaled) vs. Fraction of the country&apos;s population within the state</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='COUNT([Name])*0.1191/1269' datatype='real' name='[Calculation_1158832540786188307]' role='measure' type='quantitative' user:unnamed='Sheet 5 (2)'>
              <calculation class='tableau' formula='COUNT([name])*0.1191/1269' />
            </column>
            <column-instance column='[percent_of_total]' derivation='Avg' name='[avg:percent_of_total:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Percent Of Total' datatype='real' name='[percent_of_total]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1158832540786188307]' derivation='User' name='[usr:Calculation_1158832540786188307:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[usr:Calculation_1158832540786188307:qk]' scope='rows' value='Number of cases (scaled)' />
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[avg:percent_of_total:qk]' scope='cols' value='Fraction of population' />
          </style-rule>
        </style>
        <panes>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.51574587821960449' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[usr:Calculation_1158832540786188307:qk]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[avg:percent_of_total:qk]</cols>
      </table>
      <simple-id uuid='{9F12D248-CD48-438B-8D43-D58B3D303E9C}' />
    </worksheet>
    <worksheet name='T2_5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of shootings by city/town/settlement in California</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[cnt:name:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[Longitude (generated)]' field-type='quantitative' max='-11662958.643887063' min='-15004219.515020521' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[Latitude (generated)]' field-type='quantitative' max='5470618.4048112277' min='3580908.8732260829' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' value='Count of cases&#10;'>
              <formatted-text>
                <run>Count of cases&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' />
              <lod column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]' />
              <lod column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[Latitude (generated)]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F9AE2FE3-5B52-4F19-85D6-DD61AF79EE08}' />
    </worksheet>
    <worksheet name='T2_6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of shootings by city/town/settlement in Texas</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[cnt:name:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[Longitude (generated)]' field-type='quantitative' max='-9813259.2049862463' min='-12490490.05284779' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[Latitude (generated)]' field-type='quantitative' max='4482661.9320204407' min='2968506.3941615992' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='size' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' value='Count of cases'>
              <formatted-text>
                <run>Count of cases</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[cnt:name:qk]' />
              <lod column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]' />
              <lod column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-color' value='#e10004' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[Latitude (generated)]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A12B565B-6ADC-4D0C-A015-F88BB2609F1A}' />
    </worksheet>
    <worksheet name='T2_7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of shootings in the states CA and TX, separated by race of the suspect</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[race]' derivation='None' name='[none:race:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:race:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Other&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Unknown&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Native American&quot;</bucket>
              <bucket>&quot;Asian&quot;</bucket>
              <bucket>&quot;Black&quot;</bucket>
              <bucket>&quot;Hispanic&quot;</bucket>
              <bucket>&quot;White&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]' scope='cols' value='% of total cases' />
            <encoding attr='space' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]' field-type='quantitative' max='1.05' min='0.0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='1110' />
                <format attr='maxwidth' value='1110' />
                <format attr='minheight' value='40' />
                <format attr='maxheight' value='40' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]</cols>
      </table>
      <simple-id uuid='{174C3C2C-073A-4418-9AF5-A5A7D84C4B33}' />
    </worksheet>
    <worksheet name='T2_8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of shootings in the states CA and TX, separated by arms borne by the suspect</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='Armed' datatype='string' name='[armed]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[armed]' derivation='None' name='[none:armed:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:armed:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:armed:nk]' member='%null%' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;blunt_object,blunt_object&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;blunt_object,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;gun,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;gun,other&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;gun,vehicle&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;knife,blunt_object&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;knife,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;knife,vehicle&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other,gun&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;undetermined&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;unknown&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;vehicle&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;vehicle,gun&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;vehicle,knife&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;gun&quot;</bucket>
              <bucket>&quot;knife&quot;</bucket>
              <bucket>&quot;replica&quot;</bucket>
              <bucket>&quot;blunt_object&quot;</bucket>
              <bucket>&quot;unarmed&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]' scope='cols' value='% of total cases' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' value='Armed with'>
              <formatted-text>
                <run>Armed with</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='975' />
                <format attr='maxwidth' value='975' />
                <format attr='minheight' value='40' />
                <format attr='maxheight' value='40' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]</cols>
      </table>
      <simple-id uuid='{EFC89F3F-C5CA-4E91-A937-302F984764D4}' />
    </worksheet>
    <worksheet name='T2_9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of shootings in the states CA and TX, separated by modes of fleeing and whether bodycam footage is present </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.0p5mx611trexy71gmqaos1q8ozfg' />
          </datasources>
          <datasource-dependencies datasource='federated.0p5mx611trexy71gmqaos1q8ozfg'>
            <column caption='Body Camera' datatype='boolean' name='[body_camera]' role='dimension' type='nominal'>
              <aliases>
                <alias key='false' value='Body cam footage absent' />
                <alias key='true' value='Body cam footage present' />
              </aliases>
            </column>
            <column caption='Flee' datatype='string' name='[flee]' role='dimension' type='nominal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[body_camera]' derivation='None' name='[none:body_camera:nk]' pivot='key' type='nominal' />
            <column-instance column='[flee]' derivation='None' name='[none:flee:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[pcto:cnt:name:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:flee:nk]' />
              <groupfilter function='member' level='[none:flee:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;other&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;car&quot;</bucket>
              <bucket>&quot;foot&quot;</bucket>
              <bucket>&quot;not&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</column>
            <column>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]' scope='cols' value='% of total cases' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' value='Mode of Fleeing'>
              <formatted-text>
                <run>Mode of Fleeing</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='921' />
                <format attr='maxwidth' value='921' />
                <format attr='minheight' value='80' />
                <format attr='maxheight' value='80' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0p5mx611trexy71gmqaos1q8ozfg].[none:body_camera:nk] / [federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk])</rows>
        <cols>[federated.0p5mx611trexy71gmqaos1q8ozfg].[pcto:cnt:name:qk]</cols>
      </table>
      <simple-id uuid='{847A1E77-F6E0-4A20-B162-1E43BA00C5E1}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='T2_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[:Measure Names]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[ctd:name:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:city:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:date:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC6C3855-DB7D-4A76-AFFA-9ED5375C47BC}' />
    </window>
    <window class='worksheet' name='T2_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92E84716-4D99-487A-8448-88E5EC5A923F}' />
    </window>
    <window class='worksheet' name='T2_3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540434251777:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540436168706:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540436307971:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540436475908:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540439011334:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540439965704:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540440199177:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540440227851:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state (us_pop_by_state.csv):nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED0468BB-6D84-467B-A383-1A648BC894BB}' />
    </window>
    <window class='worksheet' name='T2_4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540434251777:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540436168706:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540436307971:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540436475908:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540439011334:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540439965704:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540440199177:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:Calculation_1158832540440227851:qk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state (us_pop_by_state.csv):nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{20AE68DF-74C6-438F-B683-A299A627BA72}' />
    </window>
    <window class='worksheet' name='T2_5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15AA4522-96E2-40F9-B86F-E98DFBC51415}' />
    </window>
    <window class='worksheet' name='T2_6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9735D328-67E6-44EA-A7F2-CE7BF56549BA}' />
    </window>
    <window class='worksheet' name='T2_7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{442F9C41-4C5B-4BF7-8BB3-48EB86B94530}' />
    </window>
    <window class='worksheet' maximized='true' name='T2_8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{695A5586-DCCC-4D6E-A890-6E264F9273B2}' />
    </window>
    <window class='worksheet' name='T2_9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:body_camera:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB1C804C-9511-4EF2-B6BD-897D60FE0A0B}' />
    </window>
    <window class='worksheet' name='T2_10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D548D93A-FF3A-4FA8-A542-570996C7D158}' />
    </window>
    <window class='worksheet' name='T2_11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4C6970ED-81D1-4B78-A395-8159356AC1CC}' />
    </window>
    <window class='worksheet' name='T2_12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:body_camera:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D3A38104-4467-4461-9423-CCE1CAE96F12}' />
    </window>
    <window class='worksheet' name='T2_13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:race:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F5A42539-18F2-49E2-8CE7-76E1DA73A800}' />
    </window>
    <window class='worksheet' name='T2_14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:armed:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{57F0DF64-36DF-42CA-BBD4-293C98E3CD19}' />
    </window>
    <window class='worksheet' name='T2_15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:body_camera:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:flee:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:name:nk]</field>
            <field>[federated.0p5mx611trexy71gmqaos1q8ozfg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32739380-33CC-4E65-BEC1-42984FE5316C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='T2_1' width='192'>
      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
    </thumbnail>
    <thumbnail height='159' name='T2_10' width='192'>
      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
    </thumbnail>
    <thumbnail height='159' name='T2_11' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='T2_12' width='192'>
      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
    </thumbnail>
    <thumbnail height='159' name='T2_13' width='192'>
      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
    </thumbnail>
    <thumbnail height='159' name='T2_14' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACfCAYAAACvBNYlAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAKjklEQVR4nO3da1BU5x0G8CeexIBEhBVxQ5qkmBphjZEtCQYrUatRMSZQ7UwdO7a2Zopp
      xnHspM0HR9I4tROrM0nHWxmhyTRpNDMmQrRQvMbRallcd4mKICoJbWFVwrIgywp78vbDKpe9
      YEbYPbu8z+/jOQfmv2f22fOey/899wkhBIgkNULrAoi0xACQ1BgAkhoDQFJjAEhqDABJjQEg
      qTEAJDUGgKTGAJDUGACSGgNAUmMASGoMAEmNASCpMQAkNQaApMYAkNQYAJIaA0BSYwBIagwA
      SY0BIKkxACQ1BoCkxgCQ1BgAkhoDEGROp1PrEoZEe3u71iUMmr/PwACQ1BgAktp9nB49uJxO
      J0bt+bvWZVAAPAKQ1BgAktr9WhcQvlQ0mz/Crt0mfNmuIjpxMhb+ciUSj67BTpPv1o/kvoX8
      bH3oy6RB4TlAAK5z7+PN/bFY8epLSI0fAdfXl2BpTEDmlHG3t7CiaEMTXszPxkBfe54DhDce
      Afxqwb/KbyJ3zQqkxniWRI1NReZYbauiocdzAH/UelyJSocxRutCKNgYAH9uXIctOhpRWtdB
      QccA+DMuEfrOTri0roOCjgHwR0nGEy4zLB1aF0LBxgD4pcMP5j+E4j9/iov2bgAqXF9fxOlz
      N7QujIYYrwIFEDVlOX7b9RH+8tYa/KcTPfcBaHjhfYAg432A8MYhEEmNASCpcQgUZE6nE6NG
      jdK6jEFrb2/H6NGjtS5jUPx9Bh4BSGoMAEmNASCpMQAkNd4IC4W/7tK6AgDA+QvdWpfQ449T
      Dw76f3TULB30/+ARgKTGAJDUGAAA1qI85K39ENWq1wpXBXb8Og95RVavFQ58/u5qrN5xmo9M
      RzgGAACQgdx5Npyt7Z8AV5UZXTNm4hHvzR0WVCeuxDJYUMUERDQG4LaHjZNhO1uL3gi4UGXu
      Qtr34322dViseNAwBUYjYGYCIhoDcIfeiMm2s+g5CLiqYO5KgzHOe0MXqqtH4qkUBVEGA7rO
      18B75ESRgwHoocc0o71nGOSqMgPTnsMY781cFpi/MWJqFIAxKZh0zYxzTEDEYgD60BkNsJ+t
      hQoVNecBo9G3Ld5lMcP1lOF2w7weRuM1mJmAiMUbYX3pjDDYS1Hb3QXzLSN+6vP9d6HKUo26
      qt8hb3fv0lFZtVDTDFBCWSsNCQagHx2MBjv2f2zCLePPfKdFcVXBfG0+1hXk4LE7y9RqfJh/
      FrWqAQYmIOJwCORFZzTAdsqNdD/DH7XmPJzPZ/V++QFAMeD5jAafS6gUGdgQE2Th1BPMZ4F8
      8QhAUmMASGocAgUZe4LDB3uCibwwACQ1BoCkxhthoaBxS2Q4Xf4cSuse1A36f/AIQFJjAEhq
      DIA/1iLk5W3CkZa+C20o21AE7+ZIwIoin5ZJihQMQADp8yeiYp+VPb/DHAMQgDJhIebc2ofy
      Bq0roWBiAAKKwrTFz+HCZ6fBV4UNXwzAQPTzkBt3DOX1fNR5uGIABqTAsHA6GkpOoOXuG1ME
      YgDuRpeFBYlHUVr9jf/1jlbYQ1sRDSEG4K4UpORko7W4DI13FnW0oU0F0G1H5d4y3P9ksob1
      0WDwUYhvIyYTL0/+BzaWJiMdAL48gPztx9GJaDw681dYm+UzeQpFCPYDBFk4tETyWaDAOAQi
      qTEAJDUOgYKMLZHhgy2RRF4YAJIaA0BSYwBIarwRFgoh7gkO5nV/f1MaBpqicPHi2UGrI5DZ
      W9YOuN77sRUeAUhqDABJjQHox4qivDxs6t8MDFvZBnjafltwZMs2nO7XIeOCtWgLDjSyZyAS
      MQDe0udjYsU+WP02A+swa5EOB0v6vBjPdgyHMRdzk/h2jEjEAHhTJmDhnFvYF6AZWElZgJmN
      B/B5CwB04PTeCzD+KM33bTIUERgAP6KmLcZzFz7zGurcoUPWkgmo2GdFR00JDuoWYdbgH0ok
      jTAAfukxLzcOx8rr/b4DWEmej9mdu7Hhg+uYuSCFL8eLYAxAAIphIaY3lOCE32bgGGS+OA1j
      0xYhi7/+EY0BCEiHrAWJOFpaDb/dwNHRGPvQQ/z1j3AMwACUlBxktxajrPHu21JkYgAGFIPM
      lyej3vQ/rQuhIOGzQP2kYeVKr0WP5eAPBTm+m+qzsTI7JEVREPEIQFJjAEhq7AkOMvYEhw/2
      BBN54REgyJxOp9Yl0AB4FSgEhsMQaDgM5fx9Bg6BSGoMAEmNASCpMQAkNV4FIqnxCEBSYwBI
      agwASY0BIKkxACQ1PgoRSh2XUbJzG8rrOqEkPI0lr63CrCQFgAs1ezdh+6FGIOkFvPbGj5Fy
      e6IhW9kOnErJw+LkIHcfW4uQt9PUZ8EjyH0rH9n6MKgtoG7Yr1bgeNkJnLyZhtffyIa+z9qO
      yyXYua0cdZ0KEp5egtdWzYJnd9dg76btONQIQFCIdApL4Xqx/cQ10SXcwlH7idiYXyy+EkKI
      plKxucAkHG63cJgKxObSJs+f3Dwl3ttzUbhDUN318rfFe1/4WREGtQVk+Zv4/a7DorqlQZQW
      loqmvus6LaJw/XZx4lqXEG6HqP1ko8gv/koIIURT6WZRYHIIt9shOAQKFZcFJ5tnYumMRDwA
      BbFP5iB3YhXO1AOwNSI+41nEKgpin81AfKMNgIqaQ/WYsig08w593axg/Dg/K8KgtoDSluPN
      V+YgNf4Bn1Uuy0k0z1yKGYkPAEosnszJxcSqM/Ds7nhkPBsLRYnlOUDItLYCEyegdxohBZNS
      9WhuUQF9EuymSrSpKtoqTbAn6QHbEVSPz0F6TCiKc8HeEo+H9X5WaV7bvfHs7j6TNimTkKpv
      hmd322GqbIOqtvEcIGS6bmFEdHS/RYqiwNZ0A0ifjSVJ25C/uhDq4y/hN2tGo+JYNGbNc+Dg
      lnUorlMx/oev4vWfGBCc71w72ttMeD/Pcw4wcvR3MXXxz/GL6UlQ9FrXdm+6bo1A/92tQFFs
      8OzuJUjalo/VhSrPAUKmqVRs/eRqv0XuMwWi4IzvKLrzi/2i/KpbtB57R2w94RBucVNYCt8W
      t4ewQeYWnc3VYv/m9WLPJd+12tYWSJPPOUBT6VbRf3e7xZmCAuG9uzkECpW4OKDuKnpnWlRR
      e9GGBJ3XKFqtwT+rv4PnkxU4Wkfiie/FQkEM0tIT0Ox3msahpiBqbCoWzX0cV+pvhFlt355n
      d/cpSq3FRVsCvHc3AxAqUUbMSDiOPSevoxsq2i6VoLhuKp5J7ruRivoD/0bcC57p1sfEdeHK
      5Tao6IDV3IyEYM1DajuMwg8q8d8Oz7vFuu0X8WlpAyan9D0r1qi2exRlnIGE43tw8no3oLbh
      Ukkx6qY+g/67u55Pg4ZUv/sAGVi2dgUyE3p/ktTGMhRWpuCVnGTP1RW1EQff+VMIxtnduF65
      B0Ufm/BlexeU6EeRuXwVlqUn9Fzl0a62wGxlG/BmsfesfXfuX3jdB8hYhrUrMtG7u1U0lhUy
      ACQ3DoFIagwASY0BIKkxACQ1BoCkxgCQ1BgAkhoDQFJjAEhqDABJjQEgqTEAJDUGgKTGAJDU
      GACSGgNAUmMASGoMAEmNASCpMQAkNQaApMYAkNQYAJIaA0BSYwBIagwASY0BIKkxACQ1BoCk
      xgCQ1P4PIE0kxKfxMX8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='T2_15' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dZ5AbZ57f8W93o5HDADOYnCM5HOZMihKV4660t7eXqi6ty/a5/MJ39tlV
      fucql9+4rpzqXLX23fm84VbnzdpVWEmkAoPETHGYJuc8gwEGOXTwC1IMWlISyCGBEZ7PO2IQ
      /gTwQz+xWzJN00QQSpRc6AIEoZBEAISSJgIglDQRAKGkiQAIJU0EQLgjXddZWFgodBkPnAiA
      cEemaRKJRApdxgMnAiCUNBEAoaSJAAglTQRAKGkiAEJJEwEQSpoIgFDSRACEkiYCIJQ0EQCh
      pIkACCVNBEAoaSIAQkkTARBKmuVuf4hEIiQSiYdZi1BEDMMgnU4zPT1d6FIeqLsGwGazPcw6
      hCKj6zrRaBSXy1XoUm6j6zqmaWKx3PWrm5e7PovD4cDhcKzKiwhrj6ZpzC8uIjvshS7lNqam
      YRgGstW6Ks+3OjESvpJGl0N8d2yw0GU8UHkHYPzsr7k0pwOgOMvp2badep/6JR6ZZXZkHld9
      DV6ryJ1QHPL+Ji4NTaJ27iCISTY6wdFjg/zWi918cY8hy8zwJFVVFWs8AAahgWO8fbSPuOSh
      c9ejVC0c5oP+mwMGkqKy7vHf5WCHp4B1Cl9G3t9E1Rakc+tWmkwDPV1O+K1p0oDV0MhmMuR0
      E1lRsdmsKLKEoWVJp7PoJEjndDBBy2UwZSuqImGaBlpWQ7FakSXANDH0HOlMFsOUUKx2bIpB
      Np1BMwDZgsNpR0Enm9PQNQ3dMFEsKjIGOU1Httiw29UHMMZrkho7zs9PJTjw3DcIyHHmYlC/
      7SV+d0ucK6evYpY1sa6jCqfLueqvLqy+vAOQyy4zevkycUMjMTuM2fEoPjNHaOwixz86w9hy
      Gkd5K7v272NDg42h44c4dnmchG6SyNXye3szjPedYN6zh91dZeixMY4eXWTb87vxS2AaGUbO
      vMuRs6PEDSuNe1/iicYI7//yKOOJHIqzgkde/habXTMcOXyWxcVFFqIZXOXVlHs05qeXkP0b
      +PrvPEn1l2mZ5cOMcfF8lL0vPE5XwAkECdZ8+kcLHpcLw+PDH/CLztUakffnpGXDjA8MEJEs
      OP0VVMg5tHSIvpElqne+wvPtZSz1n+Xi6CC1qsSFUA1f+5OXCNrinH73IlbViquqgbnxEcLN
      WzEGr0DnQfzXf65ziTEujlt5+g//BXUug1RGQtZkGjs7sSezZJaHOH1pgc27QXJUsv25p2jx
      Jjh78gRG87N87WU3/W//hMUkVPtW+d3KLjNjKedxm/h6f1Xk/Uk63G0cfOUVmk2DTGKRk+9c
      YKm+k7TVSXXAi6pYKQv4sYcWSC0ksXYcoMqpAAoWRQZJwhesxDbRz+LcKHOjNta/7L7x/GY2
      QtrZTJ33WhPGZdeZv3qFybSDmmAZ2MJMxRKADavXT7nHgapkKKsIQpkPiwwOh40HMoUnyciA
      OJ/8V0fezWTT1MgkkyRTKTKRaabCBqbTiy8bZWxskkh0mbHRSZK6F29tBdELJxhfjhENzTIT
      SqAbINsCNPhkJs++z1xtz21NFcXdREW8l0vTYWLREPPLCXLJGPbqTjrbG/Cgoa/mO5APtZxG
      c5GhaArDNDFNA103EJdYWLvyPgJI6ixvfOc7gITqrmHfCy9Ro7qp2LmRkx+8z3c/WqG8bQeP
      P9pDmVfm6e43+dUP/g78NZR7G7BZFJBkgk1B4meX2XrQd1sKLbYqduxv5d03vs97aRvtj36d
      xxrXk37jVb57PMDGLXW02ZygqPi8JqoigazidJfB9SA5/MEHM8Mhudiwq5Z/PPQ+2sYOvEqG
      GOVs7qrHvtr9DeGhkB7+FWIMYksj9J68QjjQxRPb23FalYdbwn0xiExc4ONzo6RlF40btrKp
      OYiqZJgZncV0llNT5V3zqww1TePtUyc5El0udCkPVEECkIzMMjYep7yliaDHfm34UygqpRKA
      AgxnyDjL6ugue/ivLORHkiSsSvEdnU1gtX4zC3AEENYCTdMYGRmhs7Oz0KXcJpfLYRjGqq1W
      XutNVUG4LyIAQknLuw+QCg/x7k9+yWWpnd9/+Umag192w4SJYZhIkoQkiV7vWmCYJppesFmX
      O9IMA9MwVq2uvAOQHLtAbtsf8e+2VqDkdfxIcP5wL1X7tlLvEhtt1oLh0BJ/PzpQ6DIeqLwC
      EBk7z+mrU4RsFzliVLOluxl9fpD+yWUMe4DWrg5qfHb0VJixwQFmwhmcwWa624NExi/TN3SV
      CSPOeKCKju51yAvDDEwukMVGVVMHbQ0VqGiEJq4wML5MTrHjDDaxs6saLRlmdHCQmXAGT007
      69trcRTfAIWwxuT1Gy4rFqwWBUW1YlUtGIsXef/MJDlZwVgZ5djpfpLpJJN9Z7g8EUNWZCJj
      p/n4yhJYLFgsFlTVitWqIksayUQGZBXVTDI5McrCSg4tdJUPToyQwoIlM8XxTyZBTzI7Ncpc
      WMOiKqzMXeHq2MqDek8+1+Klw/zslycIGTdvy8aHefPHv+Lc6KfX1DJJhMb54NB7DM/HxNqh
      IpbXEcDbsJHt4WEk7372N8Pk+z/Evfl5HukoQ8otcPQnZ5hI1BKfD9O25xtsqLCQWOzj+Idj
      2L61jfbhDFW7rzeBzAxTuUWunPmEuWiSpLuFYEMntvlhArue4kCzC8vKJ1w+bKAnVug7dZgP
      B9LYrTI5XaZ9XwPdbT4e9o7V2EwSQxuhb24n+2oVJExSI2e5HDFRl5LQUoZp6qysTDE/voK9
      dpH6oBubmO0rSvc1ESZJ3LIQzLz+S3ftg/70dtM0MJGu3apnyermtb8t9HFq0cvz3/4LquQF
      jpzqQzUMTN1EUmRkCXRNxzAlTNPEXdfDtw4+zsY6O6auoek3lv48ZDYaN7cxe3mYXE0nVjPO
      5UsaGzZX3TicmlqOyPgcbbs7WAwnSKYNbE7RXitG9xWA6u4NnPjwOB/OepAyEZaqWtjpcrFY
      HeCTj98n5LORjYWwrTtIGRa8lhXOfXychWANrdVu/NI8V89+xDApJpcylDeDr7meuQ/e4f2x
      cuzZaaLZFixOHwGHhd5ThwgFvCiKjYr6VjpbKgsyjqv62qjO9TGT6qAh1c+ku5uNjhCz6Wt/
      13MhZiPlbN5XTeJQHyvpNH5ncZ1eRLgm//0AdVvoun5GCkvlBh7faWFwahnT08GBjjacdhv1
      XTswLMPMRdL42nfT1VGBAjRu30p8YJKcLKOUNbKpI83gdBjV08TuFg+VAScWpZmNXTnCKROL
      BDaHHVQXrT3bkJ0jzK9kUF0+AgEvhfpNtVjdeGstLExHcYQWCPbsxJYI3fh7ZuYiyxVbCdj8
      tHojXF1K0xwQAShGeQfAWt5M7S0PL2/eQHnz7feRnX7aNu6g7TOPtfkb2bq78eYNd3hsdnKE
      Y0eOspw0sPnr2fVsA9eWXlfQsamCjnwLfgAkxYrbW8XiQi/nl31sXmcjeWMHTo6Rc+c42XuG
      gSMyeiqC2VPPU53lYtaxCBXd3j61fhf//M93FbqMLyAT8HsZ6f2IGe/jPGK3kbz+FzMxwOXE
      I/z7//goAQBjgcN/f5TB9Fa67KIjXGyKLgDFPkvsqavDZrGg2gIEG7biCpRhtyp4/LXUak7M
      1ApNj2yi/NP/h1LFtv3VzMZNEAEoOmI1qHBHpbIfQDRLhZK2CkeADKOjfcRi1WzaVLU6VQFg
      kIqnURy2otyU8VWnaRrDw8O0dxTDsMNNOU3DNAysxXVyXJPVb0il6D9zEf+WHprK3F98d2HV
      SZKEIhdXI8GQJIxVrCvPAGQYPXmEcxPL6BYvHdt2s6nRBVqSqcsfMzGUxfA0sG33Dhq8OjOX
      z3Hq6hSavZzuLTvoavCRnrvKRycvETE8tG/dQU9DGYmFAfqHI0RCs0QNBxv37sM2f5ZTZy8i
      TQwRDNawZe+TNIttlMIqyzMAJrKnig2bW5D1BS72TdFd2wG6geyuoH1dkNT8EKeOXMSz18Gp
      yRxtPZuxyjIumwTGPL2fhKjr3kKzHmXg6jD15RtIzg0zOO2kZ2MPddErnL+8zIubW2hujOPs
      aKXO7ycgVlALD0B+AdB1wlO9HP1kkpVsmqi5nt2PtYHVRU1jDZ0dVWi1VZinjrNk2UUweZLj
      J2Zo6+imO6jATD/vn/wQ48y14UDDqKdudxdBVxkdmzaxeZ2XXFZj/LCBt6KGyuAC/uYW0QQq
      kKHQEt97p/iuD7Cam+LzC8DKJS5GN/Anf/57qJkhfvmjMSQ+XfRmAiap6ByhpJWgxcPm575F
      V2SO4UuXOXsuw/5uleoNT/PyizsJ2CWysQS6QyW8JCFL8rU5AEm6+Z/Lpknm9GsL6kyZImuO
      fuWZpknOML74jmtYfgFwVFOuf8SvXxvFWSaxnFIBCUsuxvD5foaHLZimTHX3PiqlFXrPnGd8
      MYZhWqhqr8BWUcYm61u8/vNJnFYLNkcV2w5uukuarQTcSY4cfoOhQB2bdz9G42qf7PYehPqP
      cXopyMH9XdeWYienODEks2fTzQUi2vwlBpUe1lcUrEzhS8ozAPXse3QPCzEdu9fF1m4r5VY7
      1Pew57E6kpqO6vJTU1OBlSxt6zZQVpMC1UF5ZTUuq8rmJ56hfDZM1pSxufxU2BxI9T14uNbI
      t1ia2L1bAlRqt+zh0eoQOdmBv0guVbUyvshiuI9PZlrZU6tCZp7eQeW2AOihIUatIgBrQZ6d
      YIWymhbKaj5zsytAfVvgMzfa8Fc14P/M1IDqDtLSEfxMFWU3rjAjyy7Ky6/f7AzQ2PrZ5y00
      F117K5k9fprFV/YS/OIHCEVMtKrvgcPXRUfdEoNDYbRCFyPcFxGAeyBZ7NQ2tpGdH2QpUVyn
      DRHyIwJwTyS8lTV4zQRTs6HfuF5BKpm846OE4iMCcI9k1U93h5/JsUniaR0tk2J5cZb5qV7e
      PyfTXF3oCoUvo+j2AxQ7V2UlFosFJAl7fRc9VZOkdDe5ZIjeo28xsOxk/RPP0y3m7tYEsR9A
      uCOxH0AQSoA4Agh3pGkaA0NDNLS0FLqU2+iahmEYqMW1H0D4KrLIMp5VuhDFasnJsrhAhiCs
      FhEAoaSJPoBwR5qmcejMac6m4oUu5TYmJpird/oc0QcQ7ko3DKKZdKHLeKBEEyhP4ZHTfHhm
      hMynN6RnOdc3j56KMDE+ynLy2gYSIxNjamKMxVhOXB+giIkA5Ck8NM7o4IdcnLu+DjQ1w5nL
      s0iyQWh8jLGZJTTTIL48y+jwDJrYxlbUxKeTNy9du5qZOn6esH7zt122ltHe6GJycopoPMns
      yFWkug1UOpVV278qrD4RgHvgKt9IR+U0V4dWbq4ElWQ8jd20Z2c4efE4ffO19LT7UMS3v6iJ
      ANwDWbVR29xOdnaAUPKWTeOym65tdcyfmaRy90bKxLtb9MRHdE9kfJU1eMz4b+wHsAQbaalp
      pb22SDYxC59LBOAeyVY/61o8jI1PkUjfGgEZWbWIps8aIQKQJ3sggEtRQJJxNXez3ufFX3Hr
      r71KWYVPTLCsEWImWLgjsR9AEEqAOAIId6RpGn2DA1Q2NH7xnR8iXb++H0AV+wGEB8yqWKh0
      F9fm5lwuJ/YDCMJqEUcA4a7mYlHO954vdBm3Ma6frVouzBViwNA1jBu9BglZkZG/1NpsE8Mw
      kSSp6C+FKlwTy2Q4t/jVHgXKOwAnvvsfeHfBjQ0JxVnGtie+ycGeCr74MnYJzh/upWrfVupd
      a/lyLyaZWIiFUAwNC25/BbbMAkvxWybDJBlPsJ6gWxxgi13en5A7sIM//vYrNGOQXr7EL37d
      T7KnAs+DqK4I6dFJPjpyirmYBrKCv3UbrblezoxFCc0uYdp9VFT4aNsdFAFYA+75EzL0HPHF
      ZSzBaqyAFp+j99QprszEKGvYwK4dPVS6LMSmezlyvJdQVicS9fG1nTnmhvpI+jfSWm5Bz8UY
      vjhJ9dZuvBJgGkTn+vj42HkWsiqN2x9nZ1WM0x+eZjKaxVLWypPP7SdohrjaN8rC1DiTYY2q
      5g4CyhLDIwu4Wvby+L42nKv3Pl2XZfJ8L/GqzXzt2TacUoaVhIHX3UrnvhgXjvViBNrY2F0j
      OldrRN6fU2z5ND/5T5exynZqunbw9BMtWPUol89eYF6uYe/+bpZGBrnwiY29Oxy8/9YVKvbv
      Z4MjxeUzMyiKRC6XYnpgnNo9rbB4kb54HZ+efUbPhfnk6FlsnXs5UGaiqVYk1UFd5zaaXCra
      wkVOX43yQnucidFZbHXr2Nua4cqFXmYbd7DrkQ7GTp9iIt7GutUewTPCDK342LmtEbcqAw78
      RXDVGuHe5R0AT2An3/72KzTrOcIz53j33fP4n6lmXnLR2b2RtqCdWofG6cEFwldTaLteYt96
      NxAnNBhBli1U1TQyuzLOzHI18bNztD+xD/V6v1iL9DHh2MUfbGm/NkZrGkRnxrl08giD8zGy
      2QT2LV280G7DWdNKd1cn5ZYIuUwS6ntorgBj9AIP5Kzl6TjLkopTFp34r4p7H0tSLHjLWyjP
      LhBWrVi1DCvRBJqRIx6NkdVVVKeVzOIcCc1Az6ZIpHOYJqjeAD7ZZL7vQwbkTlpdN59Wsgdw
      ZxZYTmoYeo5UOsvK1CD27X/Av/rLv+DPfnsPrrtX9WA5fFQbSZa1r/aF40pJ3keAZLSP4z/4
      AR6upcdRu4MKezlqjZszZ9/m8scGis1P5+YdBBqh7vIhfvrqCexuO7FlB40mIDtoavLT/+YI
      /kf3c+taSouria7KAQ79/FU0VCp7HmWLz0/41Bv8+KqLSk+8cJvMpTK66jIcPnEF72Ob8clJ
      FsIawXIfFtHoX5PyXgsUWxgnlLz2EEmx4Q8G8dotGFqaleUQ0ZSG6vARCHixWyTS0SUWw0lQ
      ragWO/5yHzZFIrtwkddOxnjs4E4qPbes6zBNcukYoaUwGUPG4a8kYMuxvBgiZap4PDZ0XAQ9
      ErGUgcNhx4JGKpMGqweHBTLRMLrTj/MBfCmNTIRLH73Ne6dGyFi8tO95hhd3tWFX41+pTnCp
      rAYtwGI4jfnhj3jzzUl6XnqObc0BlDU1MWZimp9eF/nmCZokCW68k7de63iNEgEQSlqpBGCt
      H6mFByjocvNyXe0X3/EhMgwDwzSxKF+89uDLEAEQ7qrM4aCzqbiuDyCWQwvCKsr7CKBlVhjv
      H2SRMta3N+Fzqg+iLkF4KPIOQHzyHCf7ElQ2OdGNfPrPGSb7Z/A011NmE6FZCxYTcfquXip0
      GbcxDANME7lgfYBEhPItL/Jkh5X8Ri9zLEzMItVXiwCsEZFUiuPz04Uu44HKKwATR7/PD97t
      JcoVzjRu5A+e38bCucMcuzSF4a5j++PPcGB9JfGZy3zw7of0zybwNm/h2ae2EfnkHV5/7wrG
      x4cJ1LXz9NdfQrr4Lu+c7ieBk/adB3l6/0Z85gpnDr/Gsd5pMqodS+Mj/NtvbSc628+RQx9y
      aSpOcP1enn1yL/Xeh9+HzybCrKQUysq9N9YvGXqK8HICq7sMj8MCmOi5DLF4CpvLg91qWfPz
      Al9VeX2DGg/8If/S9wvOeV/h8WaIfPJzjjn28Gd/2YYc7uP1Q5eZq7Oz2NdHYO/v8286y1jq
      e59jp+d54aVvgNx2y4aYNPPN6zngaSCbXmZ0aZrZxXYs0RMMWXfzT/51F+74ef72PTDSEfqv
      9pHxd3Owy0ZoZpCzvY1UP9L00Iexpo7/kl8NwlN//EdscF/7Wqemj/J3/zBA91O/xUs7a8E0
      WJ7u5Y03r7LuyafZ0VmLRSSgKN3XKNDyXIyG9U24VAuOykYajDShXI5cDmrqg6iKir+xi0Bs
      gd+40E58iaHxKRbDEaLxFLFkhlw2S3wpReu29fhsMoqiIEmgZ1LEoxEyepboSgzV20xrratA
      a4Jq2LLTzthA+Prra8xfmSW4pZ1P97mZhk48HKK2pYVUIkpKE3ONxeq+AhCs8zF6YZhYTiM5
      O8KI7KDSqmJVYXJsnqyWIzRykSVvDV6AeIjFhIZh6GjRRUJSBVv3H2Tv1nYCjmuluMoUhntH
      SGo6scgKaU1HsdqwOwIEG7t57MmnObCzh0pX4UZwXfXrsE72EzGA3AyXlyrprrnZrzG0LKHp
      DC3b60iFE2RTuYLVKny+vFsQstWF4/qj3N1PsXPuNf7mr17D8DWx/5lnqfSW4d20hSPv/IT/
      +qsYZe17+NqL67Ej0brezY//4X9yrKydZ196ljbtDX7w12/jrGmjvLoah6rg6thH7aVX+e9/
      laE86CBu24XsqKBnYwfvvfsz/suv4ziDXex/+gkqVvvd+JKsjlrqK04xsZDDFrlKbt0mypU+
      4te/57nEVSbpYlOwmnR6gJFEknLv6pzISVhdRbcWSFsc5OTQMlZVwYhOM+nYwm/vbSp0WTeM
      vPMOyX27KZsZYDLmxbY0iWPHdqwz5xhLr+fJndVMvf83/Hy5h71NNpLjp+nzP8c/faJlTXWE
      S2UtUNHNBEtWG1I6SmgpRMLezCM9NYUu6TdJFsrcfqTQWS5TSc2t0/L6IpeGFGpcMZaWlkg6
      A+iDQ4TFHpqiVHRrgRRfI/seL67zUd6Js8yDETdw1riw2W5OyhgLQyzVP8K3nluHDcBMc+X1
      H3FlweCR6qL7vSl5RdcEKnZ6NoupqlgwyWVzmLIF1SJj6Dl0LKiSRsZQsKs3Q6Hn0uiyDesa
      umpGqTSBiu4IUOwU66edWQn1lqaPYrFePzmYFftnZukV1f4lThwmFIIIgHBX5U4nz1QGC13G
      bQzDwDRNlNLbD5Bm9OI4zuZGqjxr+dSKa0fA6WJPe2ehy7jNau8HyDMABulEEs3Q0XSw2By4
      7Oq1E+YaJrqWIWuouF1WtEyKdCaHKVlwuFxYFdAyKZLpLAYyVrsDu00FLU0ikUZHxuZwYlcV
      DC1DJqujazl0ZOxOF7IWY256GrfHhd304XB5sIp2hXCf8gxAmA/+4ScsuhSi4TS2ig289PV9
      mHODDA9PEYsusGjp4cXH6xg7dYze4Xly1go27DrAji4nA8ff40T/DDnJx7rdB9i7pZK5Tz7m
      4wv9rGh2qrp28tSedmKDhzl8OoZpRIil0jTs+Sbr9HN8fOoi+tWLBCrr2Pfsb7O+UDNhwldG
      3k0gq6eex155jjpLguFDv6J3XmOjniEcTlO/63meavAxd/UYl4YjeKsbkDIR+k+epbFpB0sR
      nZqubbQ21lFdVYk1OsgHHw3jaqqjzogzeraXiZ56ymSVYPsOHtndjDV1nteOpel66SnSmWp8
      G7tpDpTKqXgLK5RM8O5Qf6HLuE3B+wCKw4fXoaDgpbZG5XISsNuobumiq7EC1UyTymRwBVtp
      aw4g0YjNVY7fXsG2PVsYHJ1i/MpZxmdb2F0dIR5sYVvztY5WU6uLGreNTNhBIFiJx2ZBU9wP
      4CS3wpexnExyZG6q0GU8UHnPzBjZGJFIlPD0Fd67AG21EsgKqtWKIksgq3hcXhQji6uqgeaG
      WlxKjmwqQVSz09DRw+Z1TThIkiirpSoyR8bXQHNzI0E7ZMy7TZlKKMkQ4wvLxOIxMgVaX6Zn
      ksSTGW5UaeRIpW8vxtQyZLSHXppwD/IOQHL+Eq//8Hv88I3z+HY/RrfPhs3hxutxXnsyyUJ1
      aw/ranMc+dkP+f6P36A/BFabQnb2Im/89B/5xdEBbFXtVFd08vzzrfS//Srf+8GPeH8ghMVU
      sDv9+K6fW1+S3ASDTsBJy8Yalk6+xf977RDjsdV9I76s8Q//ke+8+ibTyesRWOnl+29cvu0+
      2YG3ODz28GsT8pfnTHCID39xlc2vPELZg6upqI288zYj3gip7F6efrQRe/gs//s9hX/2zS03
      7pO58gsOW1/hhfYCFnqfSmUmOM8jgIfuXetKvE0uUd62A3/0PMNLop2z1uUZACvB2gpKfWW7
      6qigqa2Spb5hEmKV55omlifeC8lCTV0Dltw0E3OJ39iaqWviyLBWiADcI4snSLPfyvjkFGnN
      xDAMNE1Dz4bpH0rgKdhVPIR8rKG1QEVGslHT2Uz/1bNEcm1kIjOc+OAthkLgqdvOc8W1hky4
      C7EfIE+5ZBLDbscmy4BOOhYlYdrxOxXi0QhpTcbhLcNjX9u/LaUyCrS2P6UCUJ23joEp2D3+
      G5d48gYqr539QlgzRACEuypzODgQaC10Gbcp+FogoXQEXW72d3619wOIUSChpIkACCVNNIGE
      u4qkUhwfHyl0GbfR9Wt9AItF9AGEB2wxEefI7EShy3igRBMoT6ahX/sVunGDiW6YmKZ5Y4Ti
      2s03/y0mWoqXCECeRg/9PX/1f15nNn19FVzkHH/38wvo0WlOHv2AvrkUhmmSi0zy8dGjDC1m
      Cluw8LlEAPLWwNb1cc6dm+XWr7bFG6TeqzI9OUk6p7EwM45mr6Ouwr6mTopbakQA8iYR7NyB
      Z+kco8u3rPqUbNS0NyLNTzGxNMHIQIyarmac4h0uauLjuQeqs5Km1jIW+sZJ3dLAt7jr2NaY
      4fBrb7JUvY0WnxhjKHYiAPdCUqmrb0bKjDM+n7zZyZUs+DfvZJ2nk727q29cRE8oXiIA90j1
      BWn2qkxOTpHRbx3nsWB1O7CJd3ZNEB/TvZLs1HY1IoUWiaTFNcDWKrEfIE/plRUMtxunogAa
      8aVFInior3Bfv4dGLJzE4feu6VlGsR9AuCO7z3fLvyy4K2pw33YPCx6/2BWwVogACHfltdnZ
      XtdQ6DJuY16fXZfFfgDhQavyeDjwFd8PcNc+wNzcHOFweFVeRFh7TNMkk8lgt9u/+M4P0adf
      V0lanTHmuwbANE1E/7h0aZrG6OgoHR0dhS7lNrquYxgGqqquyvPdtQkkSdKqpUxYe2RZRpIk
      ZLm4RsoNw0CW5VWrq7j+d4LwkIkACCVNjAIJa8pqnQ7lUyIAwpqy2v1S0QQSSpoIgFDSRBNI
      +GKmRjIWJZk1Ue0u3E4bsmSSjkVI5CQcbjdOqwqGRjaXQ7baUeX7bKrkkiytJNQt7uoAAAPD
      SURBVK/PRcnYPV5cVol0LEpSk3F63DhUCxg5MpqORbVhuYfXFAEQvoBBYuYKhz48zVxMw17R
      zv4De2lyLfPeL95gMqlSvXk/T23vQFqZ4OpIhMZNW6l03N+rZgff4X+9PU+FE8BJ12PPsKMi
      yntvvMdMykr9rid4ZnM9qblhBud12jZ047+H1REiAMLnM6Jc+WSC8u1f48VWJ0MnP2ZiappK
      7wipjm/ypxtjfHB6mUwiTXR6EkfddoKO+++oLodS7PzGn/BM881vdbT/HErPt/jTjgV+fSJM
      NhlgYXEZX+0Wymz39pqiDyB8vnSEkK2adbVlWFQXLU3lGIZOFgtaMomWzaBhYsQGmDU6aK11
      r8JZMDQiYQdVwdufyVQUtFQKLZ1BkySyK8NElDYaK533/JriCCB8Pi2HZLejyjIgYbWpJJJp
      zPatNPf+iP/5PQvbDj7K1EyC6sopfvbX32fBvYGvv/IkbYF7bQdlyerzvP7f/jNvyHbK27by
      zBN7qavZTNnZn/LX55zsf/pRJqYj+LwDvPo//i+RwDZ+55sHqXXlt0ZI7AgT7kjTNEZGRuhs
      sPLrY0vs2L2RCq+VzOR5js472dnThc8ugZllafAK0/YmnMNvs9j+Mu3zH3Datp0XN1beZxUm
      Ri7J5OnDnDTW8/KedmwWCcwMC1cuMuduRh47Tq7zGWpG3uKTymd4rsP9xU97C9EEEj6fzU9F
      bpYrMxG0XJzhsSVk2YJVlQCT9PIsYwkbjeVOTFPCYpGxWhXM+2kIZZbo759kJaMjyQo2mxXp
      xrk3TFKLEwxnfLQGVEBCuf6ahiFGgYTVJnvo3trCocOv8Z1DGt7abg5012FTwMzFmZhZwF7W
      isehkqur4tRrf8tZay2PvHAf+wgUK2r8Aq9973WiGRNnRRO7H61GVSTM7DJDkysEajpwOB34
      /A7e++nfctzewNMv5/91Fk0g4Y5uNIE6O8HUSSeTZDQTi9WOw64iSxKmee3SsJJsQZElTCNH
      KplCl604HfZ7Gpe/xsTQsiSTaXRTQlFtOOxWZFkCUyeX05EVFUUGQ8+STqbRFRsupw0lz6US
      4gggfDFJwe7y8NnfdEmSUVXrLXez4vJYuX8SssWG23uHgX1JwWq9uSBOsdhw3el+X5LoAwgl
      TQRAKGkiAEJJEwEQSpoIgFDSRACEkiYCIJQ0EQChpIkACCVNBEAoaSIAQkkTARBKmgiAUNJE
      AISSJgIglDQRAKGkiQAIJU0EQChpIgBCSRMBEEqaCIBQ0kQAhJImAiCUtP8Pe2g8uv2p0ycA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='T2_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='T2_3' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='T2_4' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='T2_5' width='192'>
      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
      Crq6bTo3pgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='T2_6' width='192'>
      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
      uAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='119' name='T2_7' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='119' name='T2_8' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='159' name='T2_9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
