<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <CascadingFiltersHamburgerUI />
    <Extensions />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VizExtensions.true...VizExtensions />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='2024-07-23-washington-post-police-shootings-export' inline='true' name='federated.151qv730uxehza184qz851w9rqvg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2024-07-23-washington-post-police-shootings-export' name='textscan.016yr4b0kdbnbs1bjh03f0vizh6x'>
            <connection class='textscan' directory='C:/Users/Dhruv Kothari/Downloads/2024-07-23-washington-post-police-shootings-export.csv' filename='2024-07-23-washington-post-police-shootings-export.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.016yr4b0kdbnbs1bjh03f0vizh6x' name='2024-07-23-washington-post-police-shootings-export.csv' table='[2024-07-23-washington-post-police-shootings-export#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='age' ordinal='2' />
            <column datatype='string' name='gender' ordinal='3' />
            <column datatype='string' name='armed' ordinal='4' />
            <column datatype='string' name='race' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='flee' ordinal='8' />
            <column datatype='boolean' name='body_camera' ordinal='9' />
            <column datatype='boolean' name='signs_of_mental_illness' ordinal='10' />
            <column datatype='string' name='police_departments_involved' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.016yr4b0kdbnbs1bjh03f0vizh6x' name='2024-07-23-washington-post-police-shootings-export.csv' table='[2024-07-23-washington-post-police-shootings-export#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='integer' name='age' ordinal='2' />
            <column datatype='string' name='gender' ordinal='3' />
            <column datatype='string' name='armed' ordinal='4' />
            <column datatype='string' name='race' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='string' name='flee' ordinal='8' />
            <column datatype='boolean' name='body_camera' ordinal='9' />
            <column datatype='boolean' name='signs_of_mental_illness' ordinal='10' />
            <column datatype='string' name='police_departments_involved' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>armed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[armed]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>armed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>race</remote-name>
            <remote-type>129</remote-type>
            <local-name>[race]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>race</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flee</remote-name>
            <remote-type>129</remote-type>
            <local-name>[flee]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>flee</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>body_camera</remote-name>
            <remote-type>11</remote-type>
            <local-name>[body_camera]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>body_camera</remote-alias>
            <ordinal>9</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>signs_of_mental_illness</remote-name>
            <remote-type>11</remote-type>
            <local-name>[signs_of_mental_illness]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>signs_of_mental_illness</remote-alias>
            <ordinal>10</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>police_departments_involved</remote-name>
            <remote-type>129</remote-type>
            <local-name>[police_departments_involved]</local-name>
            <parent-name>[2024-07-23-washington-post-police-shootings-export.csv]</parent-name>
            <remote-alias>police_departments_involved</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[age]' peg='0' size='10' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='2024-07-23-washington-post-police-shootings-export.csv' datatype='table' name='[__tableau_internal_object_id__].[2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762]' role='measure' type='quantitative' />
      <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
      <column caption='Armed' datatype='string' name='[armed]' role='dimension' type='nominal' />
      <column caption='Body Camera' datatype='boolean' name='[body_camera]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Flee' datatype='string' name='[flee]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Police Departments Involved - Split 1' datatype='string' name='[police_departments_involved - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.151qv730uxehza184qz851w9rqvg].[police_departments_involved]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [police_departments_involved], &quot;;&quot;, 1 ) )' />
      </column>
      <column caption='Police Departments Involved - Split 2' datatype='string' name='[police_departments_involved - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.151qv730uxehza184qz851w9rqvg].[police_departments_involved]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [police_departments_involved], &quot;;&quot;, 2 ) )' />
      </column>
      <column caption='Police Departments Involved - Split 3' datatype='string' name='[police_departments_involved - Split 3]' role='dimension' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.151qv730uxehza184qz851w9rqvg].[police_departments_involved]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [police_departments_involved], &quot;;&quot;, 3 ) )' />
      </column>
      <column caption='Police Departments Involved' datatype='string' name='[police_departments_involved]' role='dimension' type='nominal' />
      <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
      <column caption='Signs Of Mental Illness' datatype='boolean' name='[signs_of_mental_illness]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[armed]' derivation='None' name='[none:armed:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
      <column-instance column='[race]' derivation='None' name='[none:race:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Age (bin),Race)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Age (bin):ok]' />
          <groupfilter function='level-members' level='[none:race:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Race,YEAR(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:race:nk]' />
          <groupfilter function='level-members' level='[tyr:date:qk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:gender:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;non-binary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;male&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Age (bin):ok]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>9</bucket>
            </map>
            <map to='#c11a3b'>
              <bucket>8</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>7</bucket>
            </map>
            <map to='#e03841'>
              <bucket>6</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>5</bucket>
            </map>
            <map to='#f26250'>
              <bucket>4</bucket>
            </map>
            <map to='#f67561'>
              <bucket>3</bucket>
            </map>
            <map to='#fa8971'>
              <bucket>2</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>1</bucket>
            </map>
            <map to='#feac9d'>
              <bucket>0</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:armed:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;knife&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;vehicle,knife&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;gun&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;replica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;knife,blunt_object&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;gun,knife&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;vehicle&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;blunt_object&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;undetermined&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;gun,other&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;replica,knife&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;replica,vehicle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;unknown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;vehicle,gun&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;knife,knife&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;gun,vehicle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;blunt_object,blunt_object&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;unarmed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;knife,vehicle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;blunt_object,knife&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:race:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Asian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Native American&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;White,Hispanic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;White,Black&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Native American,Hispanic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;White&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hispanic&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Black&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;White,Black,Native American&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Black,Hispanic&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2024-07-23-washington-post-police-shootings-export.csv' id='2024-07-23-washington-post-police-shootings-export.csv_A30CFDBE2DD14E62B53F655BB9D17762'>
            <properties context=''>
              <relation connection='textscan.016yr4b0kdbnbs1bjh03f0vizh6x' name='2024-07-23-washington-post-police-shootings-export.csv' table='[2024-07-23-washington-post-police-shootings-export#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='date' ordinal='0' />
                  <column datatype='string' name='name' ordinal='1' />
                  <column datatype='integer' name='age' ordinal='2' />
                  <column datatype='string' name='gender' ordinal='3' />
                  <column datatype='string' name='armed' ordinal='4' />
                  <column datatype='string' name='race' ordinal='5' />
                  <column datatype='string' name='city' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='string' name='flee' ordinal='8' />
                  <column datatype='boolean' name='body_camera' ordinal='9' />
                  <column datatype='boolean' name='signs_of_mental_illness' ordinal='10' />
                  <column datatype='string' name='police_departments_involved' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run>youth(14-28)  cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.151qv730uxehza184qz851w9rqvg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.151qv730uxehza184qz851w9rqvg'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[age]' peg='0' size='10' />
            </column>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[cnt:name:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' included-values='in-range'>
            <min>5</min>
            <max>40</max>
          </filter>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Age (bin):ok]' member='1' />
              <groupfilter function='member' level='[none:Age (bin):ok]' member='2' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:state:nk]'>
            <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='empty-level' member='[none:state:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:state:nk]</column>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]</column>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.151qv730uxehza184qz851w9rqvg].[Longitude (generated)]' field-type='quantitative' max='-7177157.2509704772' min='-15202971.079816522' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.151qv730uxehza184qz851w9rqvg].[Latitude (generated)]' field-type='quantitative' max='6292951.2717129439' min='-815350.72282512649' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' />
              <size column='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' />
              <lod column='[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]' />
              <lod column='[federated.151qv730uxehza184qz851w9rqvg].[none:city:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.151qv730uxehza184qz851w9rqvg].[Latitude (generated)]</rows>
        <cols>[federated.151qv730uxehza184qz851w9rqvg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{514AAED6-ACB9-4215-9931-4851188FEE77}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.151qv730uxehza184qz851w9rqvg' />
          </datasources>
          <datasource-dependencies datasource='federated.151qv730uxehza184qz851w9rqvg'>
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[name]' derivation='Count' name='[cnt:name:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[race]' derivation='None' name='[none:race:nk]' pivot='key' type='nominal' />
            <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:city:nk]'>
            <groupfilter expression='COUNT([name]) &gt; 90' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:city:nk]' />
                <groupfilter function='member' level='[none:city:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:race:nk]' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Unknown&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.151qv730uxehza184qz851w9rqvg].[none:city:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:city:nk]</column>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' />
              <wedge-size column='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' />
              <text column='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.151qv730uxehza184qz851w9rqvg].[none:city:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E7778D45-C98F-4BC5-8F2F-D7EF6D1BD947}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Race and gender</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.151qv730uxehza184qz851w9rqvg' />
          </datasources>
          <datasource-dependencies datasource='federated.151qv730uxehza184qz851w9rqvg'>
            <column-instance column='[date]' derivation='Count' name='[cnt:date:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Gender' datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column-instance column='[race]' derivation='None' name='[none:race:nk]' pivot='key' type='nominal' />
            <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:gender:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:gender:nk]' member='&quot;female&quot;' />
              <groupfilter function='member' level='[none:gender:nk]' member='&quot;male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:race:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Black,Hispanic&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Native American,Hispanic&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Other&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Unknown&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Black&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Black,Native American&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Hispanic&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</column>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:gender:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.151qv730uxehza184qz851w9rqvg].[cnt:date:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.151qv730uxehza184qz851w9rqvg].[cnt:date:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <_.fcp.VizExtensions.false...mark class='Automatic' />
            <_.fcp.VizExtensions.true...mark class='VizExtension' />
            <_.fcp.VizExtensions.true...add-in add-in-id='com.tableau.extension.demo.sunburst' extension-url='https://vizextension.actinvision.com/Extensions/Sunburst/' extension-version='0.1.0' instance-id='6B7E2B1D71614558859EDF7F1473AC79'>
              <instance-settings />
              <type-settings>
                <worksheet />
              </type-settings>
            </_.fcp.VizExtensions.true...add-in>
            <encodings>
              <_.fcp.VizExtensions.false...lod column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' />
              <_.fcp.VizExtensions.true...custom column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' custom-type-name='level' />
              <_.fcp.VizExtensions.false...lod column='[federated.151qv730uxehza184qz851w9rqvg].[none:gender:nk]' />
              <_.fcp.VizExtensions.true...custom column='[federated.151qv730uxehza184qz851w9rqvg].[none:gender:nk]' custom-type-name='level' />
              <_.fcp.VizExtensions.false...lod column='[federated.151qv730uxehza184qz851w9rqvg].[cnt:date:qk]' />
              <_.fcp.VizExtensions.true...custom column='[federated.151qv730uxehza184qz851w9rqvg].[cnt:date:qk]' custom-type-name='value' />
              <lod column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{245A7923-382E-4486-860C-20AD98A83A6A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Age&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.151qv730uxehza184qz851w9rqvg' />
          </datasources>
          <datasource-dependencies datasource='federated.151qv730uxehza184qz851w9rqvg'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[age]' peg='0' size='10' />
            </column>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[age]' derivation='Count' name='[cnt:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[race]' derivation='Count' name='[cnt:race:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[race]' derivation='None' name='[none:race:nk]' pivot='key' type='nominal' />
            <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[Exclusions (Age (bin),Race)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Age (bin):ok]' />
                <groupfilter function='level-members' level='[none:race:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Age (bin):ok]' member='0' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Black&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age (bin):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age (bin):ok]' member='%null%' />
                <groupfilter function='member' level='[none:Age (bin):ok]' member='0' />
                <groupfilter function='member' level='[none:Age (bin):ok]' member='9' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:race:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Black,Hispanic&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Native American,Hispanic&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Other&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Black&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Black,Native American&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Hispanic&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' direction='ASC' using='[federated.151qv730uxehza184qz851w9rqvg].[cnt:race:qk]' />
          <slices>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</column>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[Exclusions (Age (bin),Race)]</column>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.151qv730uxehza184qz851w9rqvg].[cnt:age:qk]</rows>
        <cols>[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]</cols>
        <show-full-range>
          <column>[federated.151qv730uxehza184qz851w9rqvg].[Age (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{6F9F5ED9-50A0-4304-BDCC-A5B09D7603A4}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Count by race vs years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.151qv730uxehza184qz851w9rqvg' />
          </datasources>
          <datasource-dependencies datasource='federated.151qv730uxehza184qz851w9rqvg'>
            <column-instance column='[date]' derivation='Count' name='[cnt:date:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[race]' derivation='None' name='[none:race:nk]' pivot='key' type='nominal' />
            <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[Exclusions (Race,YEAR(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:race:nk]' />
                <groupfilter function='level-members' level='[tyr:date:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Native American,Hispanic&quot;' />
                <groupfilter function='member' level='[tyr:date:qk]' member='#2021-01-01 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Asian&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Black&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Hispanic&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Native American&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;Native American,Hispanic&quot;' />
              <groupfilter function='member' level='[none:race:nk]' member='&quot;White&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[yr:date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:date:ok]' member='2015' />
              <groupfilter function='member' level='[yr:date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:date:ok]' member='2017' />
              <groupfilter function='member' level='[yr:date:ok]' member='2018' />
              <groupfilter function='member' level='[yr:date:ok]' member='2019' />
              <groupfilter function='member' level='[yr:date:ok]' member='2020' />
              <groupfilter function='member' level='[yr:date:ok]' member='2021' />
              <groupfilter function='member' level='[yr:date:ok]' member='2022' />
              <groupfilter function='member' level='[yr:date:ok]' member='2023' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[yr:date:ok]</column>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</column>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[Exclusions (Race,YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.151qv730uxehza184qz851w9rqvg].[cnt:date:qk]</rows>
        <cols>[federated.151qv730uxehza184qz851w9rqvg].[tyr:date:qk]</cols>
      </table>
      <simple-id uuid='{B4B75567-3E68-4E05-9B69-518481564170}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Race vs armed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.151qv730uxehza184qz851w9rqvg' />
          </datasources>
          <datasource-dependencies datasource='federated.151qv730uxehza184qz851w9rqvg'>
            <column caption='Armed' datatype='string' name='[armed]' role='dimension' type='nominal' />
            <column-instance column='[race]' derivation='Count' name='[cnt:race:qk]' pivot='key' type='quantitative' />
            <column-instance column='[armed]' derivation='None' name='[none:armed:nk]' pivot='key' type='nominal' />
            <column-instance column='[race]' derivation='None' name='[none:race:nk]' pivot='key' type='nominal' />
            <column caption='Race' datatype='string' name='[race]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:armed:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:armed:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:armed:nk]' member='%null%' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;blunt_object&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;blunt_object,blunt_object&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;blunt_object,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;gun,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;gun,other&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;gun,vehicle&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;knife,blunt_object&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;knife,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;knife,vehicle&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other,gun&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;replica,vehicle&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;undetermined&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;unknown&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;vehicle,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;vehicle,knife,other&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:race:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Black,Hispanic&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Other&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;Unknown&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Black&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Black,Native American&quot;' />
                <groupfilter function='member' level='[none:race:nk]' member='&quot;White,Hispanic&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</column>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:armed:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.151qv730uxehza184qz851w9rqvg].[none:armed:nk]' value='27' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.151qv730uxehza184qz851w9rqvg].[cnt:race:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.151qv730uxehza184qz851w9rqvg].[cnt:race:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</rows>
        <cols>[federated.151qv730uxehza184qz851w9rqvg].[none:armed:nk]</cols>
      </table>
      <simple-id uuid='{A53C1E3D-7E69-480E-BA51-7AB22F732C5C}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Age vs armed</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.151qv730uxehza184qz851w9rqvg' />
          </datasources>
          <datasource-dependencies datasource='federated.151qv730uxehza184qz851w9rqvg'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[age]' peg='0' size='10' />
            </column>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column caption='Armed' datatype='string' name='[armed]' role='dimension' type='nominal' />
            <column-instance column='[armed]' derivation='Count' name='[cnt:armed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[armed]' derivation='None' name='[none:armed:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Age (bin):ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Age (bin):ok]' member='%null%' />
                <groupfilter function='member' level='[none:Age (bin):ok]' member='0' />
                <groupfilter function='member' level='[none:Age (bin):ok]' member='8' />
                <groupfilter function='member' level='[none:Age (bin):ok]' member='9' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.151qv730uxehza184qz851w9rqvg].[none:armed:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:armed:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:armed:nk]' member='%null%' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;blunt_object,blunt_object&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;blunt_object,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;blunt_object,other&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;gun,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;gun,other&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;gun,vehicle&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;knife,blunt_object&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;knife,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;knife,vehicle&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other,blunt_object,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other,gun&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;other,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;replica,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;replica,vehicle&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;undetermined&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;unknown&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;vehicle,gun&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;vehicle,knife&quot;' />
                <groupfilter function='member' level='[none:armed:nk]' member='&quot;vehicle,knife,other&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:armed:nk]</column>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.151qv730uxehza184qz851w9rqvg].[cnt:armed:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.151qv730uxehza184qz851w9rqvg].[none:armed:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.151qv730uxehza184qz851w9rqvg].[cnt:armed:qk]</rows>
        <cols>[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]</cols>
      </table>
      <simple-id uuid='{86697249-5653-49C6-83A6-ED276AAF0284}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>youth(16-28) cases&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2024-07-23-washington-post-police-shootings-export' name='federated.151qv730uxehza184qz851w9rqvg' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.151qv730uxehza184qz851w9rqvg'>
            <column caption='Age' datatype='integer' name='[age]' role='measure' type='quantitative' />
            <column-instance column='[name]' derivation='Count' name='[cnt:name:qk]' pivot='key' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[age]' derivation='None' name='[none:age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.151qv730uxehza184qz851w9rqvg].[none:age:qk]' included-values='in-range'>
            <min>16</min>
            <max>28</max>
          </filter>
          <slices>
            <column>[federated.151qv730uxehza184qz851w9rqvg].[none:age:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.151qv730uxehza184qz851w9rqvg].[Longitude (generated)]' field-type='quantitative' max='-8065301.4412605902' min='-14187775.126629306' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.151qv730uxehza184qz851w9rqvg].[Latitude (generated)]' field-type='quantitative' max='7694563.8766692467' min='2272011.991302846' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' />
              <text column='[federated.151qv730uxehza184qz851w9rqvg].[none:state:nk]' />
              <lod column='[federated.151qv730uxehza184qz851w9rqvg].[none:state:nk]' />
              <geometry column='[federated.151qv730uxehza184qz851w9rqvg].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.151qv730uxehza184qz851w9rqvg].[Latitude (generated)]</rows>
        <cols>[federated.151qv730uxehza184qz851w9rqvg].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{8B810351-E96E-415C-8E9B-84744910BF26}' />
    </worksheet>
  </worksheets>
  <windows source-height='37'>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' type='filter' />
            <card param='[federated.151qv730uxehza184qz851w9rqvg].[none:gender:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.151qv730uxehza184qz851w9rqvg].[cnt:date:qk]</field>
                  <field>[federated.151qv730uxehza184qz851w9rqvg].[none:gender:nk]</field>
                  <field>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4181</value>
                <value>&quot;male&quot;</value>
                <value>&quot;White&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:date:ok]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:gender:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2DDE2102-3976-4AFA-852A-26675FEDCB9A}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='45'>
            <card type='columns' />
          </strip>
          <strip size='45'>
            <card type='rows' />
          </strip>
          <strip size='45'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card pane-specification-id='0' param='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[attr:age:qk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[ctd:age:ok]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:gender:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:name:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[prc10:age:qk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[prc50:age:ok]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C58198F0-9D7D-44B5-A169-C7358909332B}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card param='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{663A7723-3F17-4A26-A4D8-52613148D468}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='2' param='[federated.151qv730uxehza184qz851w9rqvg].[cnt:race:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:armed:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:name:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5692A886-1A41-4588-AD87-2D01244C69C6}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.151qv730uxehza184qz851w9rqvg].[none:armed:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[cnt:armed:qk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:armed:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6D481941-E79D-4BBF-9C5E-02C5ABDB9922}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:age:qk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:name:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1E7C7E9A-50E9-4BC9-8635-26F2F4F5E9BF}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='0' param='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.151qv730uxehza184qz851w9rqvg].[cnt:name:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:Age (bin):ok]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:city:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:name:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BD110E7F-47FE-4037-AEF4-64F98087666C}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:city:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:name:nk]</field>
            <field>[federated.151qv730uxehza184qz851w9rqvg].[none:race:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5E65C87-0ECC-4373-83C4-216A04F06D3D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
      KFZnuGv0mf8FEDmyryQOQGEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      0wkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      4CMSMEcAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
  </thumbnails>
  <_.fcp.VizExtensions.true...referenced-extensions>
    <_.fcp.VizExtensions.true...referenced-extension>
      <manifest manifest-version='0.1'>
        <worksheet-extension extension-version='0.1.0' id='com.tableau.extension.demo.sunburst'>
          <default-locale>en_US</default-locale>
          <name resource-id='name' />
          <description>Sunburst by Actinvision</description>
          <author email='support@actinvision.com' name='Actinvision' organization='Actinvision' website='https://www.actinvision.com' />
          <min-api-version>1.1</min-api-version>
          <source-location>
            <url>https://vizextension.actinvision.com/Extensions/Sunburst/</url>
          </source-location>
          <icon></icon>
          <context-menu>
            <configure-context-menu-item />
          </context-menu>
          <encoding id='level'>
            <display-name resource-id='encoding-name-level'>Level</display-name>
            <role-spec>
              <role-type>discrete-dimension</role-type>
              <role-type>discrete-measure</role-type>
            </role-spec>
            <fields max-count='5' />
            <encoding-icon token='level' />
            <tooltip resource-id='encoding-tooltip-level'>Drop up to 5 categorical fields</tooltip>
          </encoding>
          <encoding id='value'>
            <display-name resource-id='encoding-name-value'>Value</display-name>
            <role-spec>
              <role-type>continuous-dimension</role-type>
              <role-type>continuous-measure</role-type>
            </role-spec>
            <fields max-count='1' />
            <encoding-icon token='hash' />
            <tooltip resource-id='encoding-tooltip-value'>Drop 1 value field</tooltip>
          </encoding>
        </worksheet-extension>
        <resources>
          <resource id='encoding-name-level'>
            <text locale='fr_FR'>Niveau</text>
          </resource>
          <resource id='encoding-name-value'>
            <text locale='fr_FR'>Valeur</text>
          </resource>
          <resource id='encoding-tooltip-level'>
            <text locale='fr_FR'>DÃ©posez jusqu&apos;Ã  5 champs pour les catÃ©gories</text>
          </resource>
          <resource id='encoding-tooltip-value'>
            <text locale='fr_FR'>DÃ©posez 1 champ pour les valeurs</text>
          </resource>
          <resource id='name'>
            <text locale='en_US'>Sunburst</text>
          </resource>
        </resources>
      </manifest>
      <referenced-views>
        <referenced-view instances='1' viewId='Sheet 3' />
      </referenced-views>
    </_.fcp.VizExtensions.true...referenced-extension>
  </_.fcp.VizExtensions.true...referenced-extensions>
</workbook>
